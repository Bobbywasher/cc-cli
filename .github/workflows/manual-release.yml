name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: '选择版本类型'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: '发布说明 (可选)'
        required: false
        default: '手动发版'

jobs:
  manual-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Bump version
        id: version
        run: |
          echo "🔧 正在更新版本..."
          case "${{ github.event.inputs.version_type }}" in
            "patch")
              echo "📦 小版本更新 (patch)"
              npm version patch --no-git-tag-version
              ;;
            "minor")
              echo "🚀 中版本更新 (minor)"
              npm version minor --no-git-tag-version
              ;;
            "major")
              echo "💥 大版本更新 (major)"
              npm version major --no-git-tag-version
              ;;
          esac

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_number=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "✅ 新版本: v$NEW_VERSION"

      - name: Commit version change
        run: |
          git add package.json
          git commit -m "🔖 release(项目): 升级项目版本至 ${{ steps.version.outputs.version_number }}"

      - name: Create and push tag
        run: |
          git tag ${{ steps.version.outputs.new_version }}
          git push origin main
          git push origin ${{ steps.version.outputs.new_version }}

      - name: Publish to npm
        run: |
          echo "📦 正在发布到 npm..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
          release_name: Release ${{ steps.version.outputs.new_version }}
          body: |
            ## 🎉 新版本发布 - ${{ steps.version.outputs.new_version }}

            **版本类型**: ${{ github.event.inputs.version_type }} 版本更新

            **发布说明**: ${{ github.event.inputs.release_notes }}

            ### 📦 安装方式
            ```bash
            npm install -g @cjh0/cc-cli
            ```

            ### 🔄 更新方式
            ```bash
            npm update -g @cjh0/cc-cli
            ```

            ### 📋 更新内容
            查看 [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) 了解详细更新内容。
          draft: false
          prerelease: false

      - name: 📢 Release Summary
        run: |
          echo "## 🎉 发版成功!" >> $GITHUB_STEP_SUMMARY
          echo "- **版本类型**: ${{ github.event.inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **新版本**: ${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **发布说明**: ${{ github.event.inputs.release_notes }}" >> $GITHUB_STEP_SUMMARY
          echo "- **npm 包**: https://www.npmjs.com/package/@cjh0/cc-cli/v/${{ steps.version.outputs.version_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY